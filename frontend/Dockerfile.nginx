# Multi-stage build for production
FROM node:20-alpine AS builder

WORKDIR /app

# Install dependencies for building
RUN apk add --no-cache git

# Copy package files and install dependencies
COPY package*.json ./
RUN npm ci && npm cache clean --force

# Copy source code and build
COPY . .
RUN npm run build

# Production stage with Nginx
FROM nginx:1.25-alpine

# Install wget for health checks
RUN apk add --no-cache wget

# Copy built files to nginx
COPY --from=builder /app/dist /usr/share/nginx/html

# Copy nginx configuration
COPY nginx.conf /etc/nginx/conf.d/default.conf

# Remove default nginx configuration to avoid conflicts
RUN rm -f /etc/nginx/conf.d/default.conf.orig

# Expose port 8080 (non-privileged port)
EXPOSE 8080

# Use exec form for better signal handling
CMD ["nginx", "-g", "daemon off;"]